name: "CI"
on:
  pull_request:
  push:
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v10
    # This also runs nix-build.
    - uses: cachix/cachix-action@v6
      with:
        name: srid
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
        # Only needed for private caches
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    # This builds neuron, as well as run tests
    - run: nix-build -j4 ci.nix
    # macOS is not supported: https://github.com/matthewbauer/nix-bundle/issues/17
    # if: github.ref == 'refs/heads/master'
    - name: Bundle up
      if: ${{ github.ref == 'refs/heads/master' && runner.os == 'Linux' }}
      run: |
        git clone https://github.com/srid/nix-bundle.git tmp/nix-bundle
        cd tmp/nix-bundle
        ./nix-bundle.sh '(import ../.. {})' /bin/neuron > neuron
        mkdir ~/bundle
        cp neuron ~/bundle/neuron
        chmod a+x ~/bundle/neuron
    - uses: actions/upload-artifact@v2
      if: ${{ github.ref == 'refs/heads/master' && runner.os == 'Linux' }}
      with:
        name: neuron-bundle-linux
        path: ~/bundle/neuron
  update-nightly-release:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.ref == 'refs/heads/master' }}
    steps:
    - name: Download latest linux bundle artifact
      uses: actions/download-artifact@v2
      with:
        name: neuron-bundle-linux
    - name: Get current date and time
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d %H:%M:%S')"
    - name: Update nightly release with current bundle
      uses: meeDamian/github-release@v2.0.3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: nightly
        name: Neuron nightly
        body: >
          Current build of Neuron from `master` branch -
          last updated on ${{ steps.date.outputs.date }}.
        prerelease: true
        files: neuron-bundle-linux.zip:neuron-bundle-linux
        gzip: false
        allow_override: true
